authguard:
  injection:
    packages: [ "com.nexblocks.authguard", "com.authguard" ]

  server:
    port: 3200

  passwords:
    algorithm: scrypt
    scrypt:
      blockSize: 16
    conditions:
      minLength: 6

  apiKeys:
    type: "default"
    hash:
      algorithm: blake2b
      key: "this is a test key"

  jwt:
    algorithm: "HMAC256"
    privateKey: "keys/hmac256.pem"
    issuer: "AuthGuard"
    allowedAlgorithms: ["HMAC256"]
    trustedIssuers: ["self"]

  sessions:
    randomSize: 16
    lifeTime: "30m"

  exchange:
    providers:
      - "accessToken"
      - "idToken"
      - "sessionToken"
      - "otp"
      - "passwordless"
    allowed:
      - from: "basic"
        to: "passwordless"
      - from: "passwordless"
        to: "oidc"
      - from: "refresh"
        to: "accessToken"
      - from: "basic"
        to: "accessToken"
      - from: "refresh"
        to: "accessToken"
      - from: "basic"
        to: "otp"
      - from: "basic"
        to: "sessionToken"
      - from: "sessionToken"
        to: "accountId"
      - from: "sessionToken"
        to: "session"
      - from: "basic"
        to: "oidc"
      - from: "encryptedToken"
        to: "accessToken"
      - from: "encryptedToken"
        to: "idToken"

  accessToken:
    tokenLife: "1h"
    refreshTokenLife: "1d"
    useJti: true
    includePermissions: true
    includeRoles: true

  idToken:
    tokenLife: "1h"
    refreshTokenLife: "1d"
    useJti: true
    includePermissions: true
    includeRoles: true

  otp:
    lifeTime: "2m"
    mode: "NUMERIC"
    length: 6
    generateToken: "accessToken"

  passwordless:
    tokenLife: "1h"
    randomSize: 128
    generateToken: "accessToken"

  authorizationCode:
    lifeTime: "5m"
    randomSize: 128

  authentication:
    generateToken: "accessToken"

  accounts:
    authguardAdminRole: "authguard_admin"
    verifyEmail: true

  apps:
    authguardAdminClientRole: "authguard_admin_client"

  #  verification:
  #    emailVerificationLife: "1d"

  oneTimeAdmin:
    usernameVariable: "AUTHGUARD_OTA_USERNAME"
    passwordVariable: "AUTHGUARD_OTA_PASSWORD"

  emb:
    channels:
      - accounts
      - auth
      - verification

  external:
    email: true
    sms: true

  accountLocker:
    maxAttempt: 3

  mongo:
    connectionString: "mongodb://localhost:27017"
    database: "authguard"

  oauth:
    clients:
      - provider: github
        clientId: "env:GITHUB_OAUTH_CLIENT_ID"
        clientSecret: "env:GITHUB_OAUTH_SECRET"
        defaultScopes: ['repo']
        authUrl: https://github.com/login/oauth/authorize
        tokenUrl: https://github.com/login/oauth/access_token
        authRedirectUrl: http://localhost:3000/auth/auth_code
        tokenRedirectUrl: http://localhost:3000/auth/access_token
      - provider: google
        clientId: "env:GOOGLE_OAUTH_CLIENT_ID"
        clientSecret: "env:GOOGLE_OAUTH_SECRET"
        defaultScopes: ['openid', 'profile', 'email']
        authUrl: https://accounts.google.com/o/oauth2/v2/auth
        tokenUrl: https://oauth2.googleapis.com/token
        authRedirectUrl: http://localhost/auth/auth_code
        tokenRedirectUrl: http://localhost/auth/auth_code
        accountProvider: true
        emailField: email
